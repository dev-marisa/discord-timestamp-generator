{"version":3,"sources":["Components/TimeForm.jsx","Components/ResultRow.jsx","Components/CodeGroup.jsx","Components/TimeStamps.jsx","App.jsx","index.js"],"names":["TimeForm","props","useState","moment","Date","format","date","setDate","time","setTime","useEffect","dt","newTime","Paper","style","padding","fontWeight","textAlign","margin","display","justifyContent","FormControl","TextField","label","type","onChange","e","target","value","defaultValue","InputLabelProps","shrink","ResultRow","Grid","container","direction","alignItems","spacing","children","map","child","i","item","sm","CodeGroup","tooltip","setToolTip","position","variant","Tooltip","title","placement","arrow","IconButton","color","aria-label","right","top","onClick","navigator","clipboard","writeText","setTimeout","TimeStamps","ts","setTS","parse","fromNow","App","setDT","setSeconds","ReactDOM","render","Container","maxWidth","document","getElementById"],"mappings":"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","file":"static/js/main.bada5ff2.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { TextField, FormControl, Grid, Paper } from '@material-ui/core';\r\nimport moment from \"moment\";\r\n\r\nconst TimeForm = props => {\r\n\r\n  const [date, setDate] = useState(moment(new Date()).format('YYYY-MM-DD'));\r\n  const [time, setTime] = useState(moment(new Date()).format('HH:mm'));\r\n\r\n  useEffect( () => {\r\n    const dt = new Date(`${date}T${time}`);\r\n    props.newTime(dt);\r\n  }, [date, time]);\r\n\r\n  return (\r\n    <Paper style={{padding: \"20px\"}}>\r\n      <h1 style={{fontWeight: \"400\", textAlign: \"center\", margin: \"20px\"}}>\r\n        Enter your time!\r\n      </h1>\r\n      <div style={{display: \"flex\", justifyContent: \"center\"}}>\r\n        <FormControl>\r\n          <TextField\r\n            label=\"Date\"\r\n            type=\"date\"\r\n            onChange={ e => setDate(e.target.value) }\r\n            defaultValue={ date }\r\n            InputLabelProps={{ shrink: true }}\r\n          />\r\n        </FormControl>\r\n        <FormControl>\r\n          <TextField\r\n            label=\"Time\"\r\n            type=\"time\"\r\n            onChange={ e => setTime(e.target.value) }\r\n            defaultValue={ time }\r\n            InputLabelProps={{ shrink: true }}\r\n          />\r\n        </FormControl>\r\n      </div>\r\n    </Paper>\r\n  );\r\n\r\n}\r\n\r\nexport default TimeForm;","import React from \"react\";\r\nimport { \r\n  Grid,\r\n  Paper\r\n} from \"@material-ui/core\";\r\n\r\nconst ResultRow = props => {\r\n  return (\r\n    <Paper style={{padding: \"20px\", margin:\"20px 0\"}}>\r\n      <Grid \r\n        container \r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        spacing={3} >\r\n        {props.children.map( (child, i) => \r\n            <Grid key={i} item sm={6}>\r\n              {child}\r\n            </Grid>\r\n        )}\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default ResultRow;","import React, { useState } from \"react\";\r\nimport { \r\n  TextField,\r\n  IconButton,\r\n  Tooltip\r\n} from \"@material-ui/core\"\r\nimport AssignmentReturnedIcon from '@material-ui/icons/AssignmentReturned';\r\n\r\nconst CodeGroup = props => {\r\n\r\n  const [tooltip, setToolTip] = useState(\"Copy to Clipboard\");\r\n\r\n  const copyText = e => {\r\n    setToolTip(\"Copied!\");\r\n    navigator.clipboard.writeText(props.value);\r\n    setTimeout( () => {\r\n      setToolTip(\"Copy to Clipboard\");\r\n    }, 1000);\r\n  }\r\n\r\n  return (\r\n    <div style={{display: \"flex\", position: \"relative\"}}>\r\n      <TextField \r\n        label={props.label}\r\n        value={props.value} \r\n        variant=\"outlined\">\r\n      </TextField>\r\n      <Tooltip \r\n        title={tooltip}\r\n        placement=\"top\" \r\n        arrow={true} >\r\n          <IconButton \r\n            color=\"primary\" \r\n            aria-label=\"directions\"\r\n            style={{position: \"absolute\", right: \"25px\", top: \"3px\"}}\r\n            onClick={copyText}>\r\n            <AssignmentReturnedIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CodeGroup;","import React, { useState, useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport ResultRow from \"./ResultRow\";\r\nimport CodeGroup from './CodeGroup';\r\n\r\nconst TimeStamps = props => {\r\n\r\n  const [ts, setTS] = useState(\"\");\r\n\r\n  useEffect( () => {\r\n    setTS(Date.parse(props.dt)/1000);\r\n  }, [props.dt])\r\n\r\n  return (\r\n    <>\r\n\r\n      <ResultRow>\r\n        <span>How it'll look</span>\r\n        <span>Code</span>\r\n      </ResultRow>\r\n\r\n      <ResultRow>\r\n        <span>{moment(props.dt).format('LLL')}</span>\r\n        <CodeGroup label=\"Default Date Time\" value={`<t:${ts}>`} />\r\n      </ResultRow>\r\n\r\n      <ResultRow>\r\n        <span>{moment(props.dt).format('LLL')}</span>\r\n        <CodeGroup label=\"Short Date Time\" value={`<t:${ts}:f>`} />\r\n      </ResultRow>\r\n\r\n      <ResultRow>\r\n        <span>{moment(props.dt).format('LLLL')}</span>\r\n        <CodeGroup label=\"Long Date Time\" value={`<t:${ts}:F>`} />\r\n      </ResultRow>\r\n\r\n      <ResultRow>\r\n        <span>{moment(props.dt).format('L')}</span>\r\n        <CodeGroup label=\"Short Date\" value={`<t:${ts}:d>`} />\r\n      </ResultRow>\r\n\r\n      <ResultRow>\r\n        <span>{moment(props.dt).format('LL')}</span>\r\n        <CodeGroup label=\"Long Date\" value={`<t:${ts}:D>`} />\r\n      </ResultRow>\r\n\r\n      <ResultRow>\r\n        <span>{moment(props.dt).format('LT')}</span>\r\n        <CodeGroup label=\"Short Time\" value={`<t:${ts}:t>`} />\r\n      </ResultRow>\r\n\r\n      <ResultRow>\r\n        <span>{moment(props.dt).format('LTS')}</span>\r\n        <CodeGroup label=\"Long Time\" value={`<t:${ts}:T>`} />\r\n      </ResultRow>\r\n\r\n      <ResultRow>\r\n        <span>{moment(props.dt).fromNow()}</span>\r\n        <CodeGroup label=\"Relative Time\" value={`<t:${ts}:R>`} />\r\n      </ResultRow>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TimeStamps;\r\n","import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport TimeForm from './Components/TimeForm';\nimport TimeStamps from './Components/TimeStamps';\n\nconst App = props => {\n\n  const [dt, setDT] = useState({});\n\n  useEffect( () => {\n    const date = new Date();\n    date.setSeconds(0);\n    setDT(date);\n  }, [])\n\n  const gotATime = dt => {\n    setDT(dt);\n  }\n\n  return (\n    <>\n      <TimeForm newTime={gotATime} />\n      <TimeStamps dt={dt} />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Container } from \"@material-ui/core\";\n\nReactDOM.render(\n  <Container maxWidth=\"sm\">\n    <App />\n  </Container>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}